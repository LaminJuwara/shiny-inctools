temp<-incprops(PrevH = c(0.20,0.21,0.18), RSE_PrevH = c(0.028,0.03,0.022),
PrevR = c(0.10,0.13,0.12), RSE_PrevR = c(0.094,0.095,0.05),
BS_Count = 10000, Boot = FALSE, BMest = 'same.test', MDRI = c(200,180,180),
RSE_MDRI = c(0.05,0.07,0.06), FRR = c(0.01,0.009,0.02), RSE_FRR = c(0.2,0.2,0.1),
BigT = 730)
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(0.20,0.21,0.18), RSE_PrevH = c(0.028,0.03,0.022),
PrevR = c(0.10,0.13,0.12), RSE_PrevR = c(0.094,0.095,0.05),
BS_Count = 10000, Boot = FALSE, BMest = 'FRR.indep', MDRI = c(200,180,180),
RSE_MDRI = c(0.05,0.07,0.06), FRR = c(0.01,0.009,0.02), RSE_FRR = c(0.2,0.2,0.1),
BigT = 730)
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(0.20,0.21,0.18), RSE_PrevH = c(0.028,0.03,0.022),
PrevR = c(0.10,0.13,0.12), RSE_PrevR = c(0.094,0.095,0.05),
BS_Count = 10000, Boot = FALSE, BMest = 'MDRI.FRR.indep', MDRI = c(200,180,180),
RSE_MDRI = c(0.05,0.07,0.06), FRR = c(0.01,0.009,0.02), RSE_FRR = c(0.2,0.2,0.1),
BigT = 730)
incdiff <- temp$Incidence.Difference.Statistics
}
return(incdiff)
}
incdiff_calc(case = 1)
incdiff_calc(case = 2)
incdiff_calc(case = 3)
incdiff_calc<-function(case = 1,
PrevH = c(0.20,0.21,0.18), RSE_PrevH = c(0.028,0.03,0.022),
PrevR = c(0.10,0.13,0.12), RSE_PrevR = c(0.094,0.095,0.05),
BS_Count = 10000, Boot = FALSE, BMest = 'MDRI.FRR.indep', MDRI = c(200,180,180),
RSE_MDRI = c(0.05,0.07,0.06), FRR = c(0.01,0.009,0.02), RSE_FRR = c(0.2,0.2,0.1),
BigT = 730){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE, MDRI = MDRI,
RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE, MDRI = MDRI,
RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE, MDRI = MDRI,
RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
return(incdiff)
}
incdiff_calc()
incdiff_calc(case = 2)
incdiff_calc(case = 3)
tt= incprops(PrevH = 0.20, RSE_PrevH = 0.028, PrevR = 0.10, RSE_PrevR = 0.09,
BS_Count = 10000, Boot = FALSE, MDRI = 200, RSE_MDRI = 0.05,
FRR = 0.01,
RSE_FRR = 0.2, BigT = 730)
tt$Incidence.Statistics
incdiff_calc<-function(case = 1,
PrevH = c(0.20,0.21,0.18), RSE_PrevH = c(0.028,0.03,0.022),
PrevR = c(0.10,0.13,0.12), RSE_PrevR = c(0.094,0.095,0.05),
BS_Count = 10000, Boot = FALSE, BMest = 'MDRI.FRR.indep', MDRI = c(200,180,180),
RSE_MDRI = c(0.05,0.07,0.06), FRR = c(0.01,0.009,0.02), RSE_FRR = c(0.2,0.2,0.1),
BigT = 730){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE,
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE,
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = FALSE,
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
return(incdiff)
}
100==5*20==200/2
100==5*20
length(c(2,3))
length(3,4)
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
incdiff_calc<-function(case = 1, survey.number = 2,
PrevH_1 = 0.20, RSE_PrevH_1 = 0.028,
PrevR_1 = 0.10, RSE_PrevR_1 = 0.94,
MDRI_1 = 200, RSE_MDRI_1 =.05,
FRR_1 = .01, RSE_FRR_1 = .2,
PrevH_2 = .2, RSE_PrevH_2 = .03,
PrevR_2 = .13, RSE_PrevR_2 = .095,
MDRI_2 = 180, RSE_MDRI_2 = .07,
FRR_2 = .009, RSE_FRR_2 = .2,
PrevH_3 = .20, RSE_PrevH_3 = 0.022,
PrevR_3 = 0.12, RSE_PrevR_3 = 0.05,
MDRI_3 = 180, RSE_MDRI_3 = .06,
FRR_3 = .02, RSE_FRR_3 = .1,
BigT = 730){
if(survey.number == 2){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
if(survey.number == 3){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
return(incdiff)
}
incdiff_calc()
incdiff_calc<-function(case = 1, survey.number = 2,
PrevH_1 = 0.20, RSE_PrevH_1 = 0.028,
PrevR_1 = 0.10, RSE_PrevR_1 = 0.094,
MDRI_1 = 200, RSE_MDRI_1 =.05,
FRR_1 = .01, RSE_FRR_1 = .2,
PrevH_2 = .21, RSE_PrevH_2 = .03,
PrevR_2 = .13, RSE_PrevR_2 = .095,
MDRI_2 = 180, RSE_MDRI_2 = .07,
FRR_2 = .009, RSE_FRR_2 = .2,
PrevH_3 = .18, RSE_PrevH_3 = 0.022,
PrevR_3 = 0.12, RSE_PrevR_3 = 0.05,
MDRI_3 = 180, RSE_MDRI_3 = .06,
FRR_3 = .02, RSE_FRR_3 = .1,
BigT = 730){
if(survey.number == 2){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
if(survey.number == 3){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
return(incdiff)
}
incdiff_calc()
incdiff_calc(case = 2)
incdiff_calc(case = 3)
incdiff_calc(case = 3,survey.number = 1)
incdiff_calc(case = 3,survey.number = 2)
incdiff_calc(case = 3,survey.number = 3)
incdiff_calc(case = 2,survey.number = 3)
incdiff_calc(case = 1,survey.number = 3)
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
incdiff_calc<-function(case = 1, survey_number = 2,
PrevH_1 = 0.20, RSE_PrevH_1 = 0.028,
PrevR_1 = 0.10, RSE_PrevR_1 = 0.094,
MDRI_1 = 200, RSE_MDRI_1 =.05,
FRR_1 = .01, RSE_FRR_1 = .2,
PrevH_2 = .21, RSE_PrevH_2 = .03,
PrevR_2 = .13, RSE_PrevR_2 = .095,
MDRI_2 = 180, RSE_MDRI_2 = .07,
FRR_2 = .009, RSE_FRR_2 = .2,
PrevH_3 = .18, RSE_PrevH_3 = 0.022,
PrevR_3 = 0.12, RSE_PrevR_3 = 0.05,
MDRI_3 = 180, RSE_MDRI_3 = .06,
FRR_3 = .02, RSE_FRR_3 = .1,
BigT = 730){
if(survey_number == 2){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
if(survey_number == 3){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
return(incdiff)
}
incdiff_calc()
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator_from_inccounts_recoded')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
