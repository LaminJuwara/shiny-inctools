FRR_3 = .02, RSE_FRR_3 = .1,
BigT = 730){
if(survey_number == 2){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
if(survey_number == 3){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
PrevR = c(PrevR_1,PrevR_2,PrevR_3),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2,MDRI_3),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
FRR = c(FRR_1,FRR_2,FRR_3),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
}
return(incdiff)
}
incdiff_calc()
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator_from_inccounts_recoded')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
shiny::runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
?table
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
prevalence_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = TRUE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-prevcounts(N = N, N_H = N_H, N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R)
return(temp)
}
incidence_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = FALSE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-inccounts(N = c(N), N_H = N_H,
N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R,
Boot = FALSE,
BMest = 'same.test',
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT)
return(temp$Incidence.Statistics)
}
risk_of_infection_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = TRUE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-inccounts(N = c(N), N_H = N_H,
N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R,
Boot = TRUE,
BMest = 'same.test',
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT)
return(temp$Annual.Risk.of.Infection)
}
prevalence_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = TRUE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-prevcounts(N = N, N_H = N_H, N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R)
return(temp)
}
incidence_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = FALSE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-inccounts(N = c(N), N_H = N_H,
N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R,
Boot = FALSE,
BMest = 'same.test',
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT)
return(temp$Incidence.Statistics)
}
risk_of_infection_calc <- function(N = 5000, N_H = 1000,
N_testR = 1000, N_R = 50,
DE_H = 1, DE_R = 1,
Boot = TRUE,
BMest = 'same.test',
MDRI = 210, RSE_MDRI = 0.05, FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-inccounts(N = c(N), N_H = N_H,
N_testR = N_testR, N_R = N_R,
DE_H = DE_H, DE_R = DE_R,
Boot = TRUE,
BMest = 'same.test',
MDRI = MDRI, RSE_MDRI = RSE_MDRI, FRR = FRR, RSE_FRR = RSE_FRR,
BigT = BigT)
return(temp$Annual.Risk.of.Infection)
}
prevalence_calc()
incidence_calc()
risk_of_infection_calc()
c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
ttemp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
table(ttemp)
names(ttemp)
data.frame("Parameters"=names(ttemp), "values"=ttemp)
U=data.frame("Parameters"=names(ttemp), "values"=ttemp)
ttemp[,1]
ttemp[1,]
dim(ttemp)
ttemp
ttemp[1]
ttemp[1]*2
ttemp$PrevH
ttemp$PrevH*2
ttemp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
U=data.frame("Parameters"=names(ttemp), "values"=c(""))
U
ttemp[1:`length<-`(ttemp)]
length(ttemp)
ttemp[1:12]
ttemp[1:12]
names(ttemp)
tt
ttemp["PrevH"]
ttemp["PrevH"]*2
U=data.frame("Parameters"=names(ttemp), "values"=c(ttemp$PrevH))
U
U=data.frame("Parameters"=names(ttemp), "values"=c(ttemp$PrevH,ttemp$PrevR))
U
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
names(temp)
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
data.frame("Definition of Parameters" = c("PrevH","PrevR","RSE_PrevH","RSE_PrevR",
"Incidence","CI.low","CI.up","RSE",
"RSE.Inf.SS","ARI","ARI.CI.low","ARI.CI.up"),
"Parameters"=names(temp),
"values"=c(temp$PrevH,temp$PrevR,temp$RSE_PrevH,temp$RSE_PrevR,
temp$Incidence,temp$CI.low,temp$CI.up,temp$RSE,
temp$RSE.Inf.SS,temp$ARI,temp$ARI.CI.low,temp$ARI.CI.up))
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
names(temp)
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
data.frame("Definition of Parameters" = c("Prevalence of HIV (PrevH)"," (PrevR)","Relative standard error of PrevH (RSE_PrevH)","RSE_PrevR",
"Incidence","CI.low","CI.up","RSE",
"RSE.Inf.SS","ARI","ARI.CI.low","ARI.CI.up"),
"Parameters"=names(temp),
"values"=c(temp$PrevH,temp$PrevR,temp$RSE_PrevH,temp$RSE_PrevR,
temp$Incidence,temp$CI.low,temp$CI.up,temp$RSE,
temp$RSE.Inf.SS,temp$ARI,temp$ARI.CI.low,temp$ARI.CI.up))
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
data.frame("" = c("Prevalence of HIV (PrevH)","Prevalence of recency (PrevR)",
"Relative standard error of PrevH (RSE_PrevH)","Relative standard error of PrevR (RSE_PrevR)",
"Estimated incidence (Incidence)","lower limit of confidence interval (CI.low)",
"upper limit of confidence interval (CI.up)","Relative standard error of incidence estimate (RSE)",
"Relative standard error at infinite sample size (RSE.Inf.SS)",
"Annual Risk of Infection (ARI)",
"Lower confidence limit of Annual Risk of Infection (ARI.CI.low)",
"Upper confidence limit of Annual Risk of Infection (ARI.CI.up)"),
"Parameters"=names(temp),
"values"=c(temp$PrevH,temp$PrevR,temp$RSE_PrevH,temp$RSE_PrevR,
temp$Incidence,temp$CI.low,temp$CI.up,temp$RSE,
temp$RSE.Inf.SS,temp$ARI,temp$ARI.CI.low,temp$ARI.CI.up))
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
temp<-data.frame("Parameters" = names(temp),
"values"=c(temp$PrevH,temp$PrevR,temp$RSE_PrevH,temp$RSE_PrevR,
temp$Incidence,temp$CI.low,temp$CI.up,temp$RSE,
temp$RSE.Inf.SS,temp$ARI,temp$ARI.CI.low,temp$ARI.CI.up))
temp
table(temp)
t(temp)
data.table(temp)
data.table::temp
?dataTableOutput
data.matrix(temp)
temp$Parameters
temp$values
xtabs(temp)
xtabs(values~Parameters,data = temp)
tt=xtabs(values~Parameters,data = temp)
tt
dim(tt)
names(tt)
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
?incprops
ttemp<-incprops(PrevH = 0.20, RSE_PrevH = 0.028, PrevR = 0.10, RSE_PrevR = 0.09,
BS_Count = 10000, Boot = TRUE, MDRI = 200, RSE_MDRI = 0.05,
FRR = 0.01,
RSE_FRR = 0.2, BigT = 730)
ttemp
ttemp$Incidence.Statistics
rbind(ttemp$Incidence.Statistics,ttemp$Annual.Risk.of.Infection)
cbind(ttemp$Incidence.Statistics,ttemp$Annual.Risk.of.Infection)
t(cbind(ttemp$Incidence.Statistics,ttemp$Annual.Risk.of.Infection))
U=cbind(ttemp$Incidence.Statistics,ttemp$Annual.Risk.of.Infection)
U
U
U
temp<-c(prevalence_calc(),incidence_calc(),risk_of_infection_calc())
temp<-data.frame("Parameters" = names(temp),
"values"=c(temp$PrevH,temp$PrevR,temp$RSE_PrevH,temp$RSE_PrevR,
temp$Incidence,temp$CI.low,temp$CI.up,temp$RSE,
temp$RSE.Inf.SS,temp$ARI,temp$ARI.CI.low,temp$ARI.CI.up))
temp
tt=xtabs(values~Parameters,data = temp)
tt
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
source('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator/prev_inc_calc.R')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_power')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_difference_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/sample_size_for_precision')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
runApp('~/Desktop/Link to recoding_samples/Sample_Size_Calculator_lamin/Incidence_prevalence_calculator')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
incdiff_calc<-function(case = 1, survey_number = 2,
PrevH_1 = 0.20, RSE_PrevH_1 = 0.028,
PrevR_1 = 0.10, RSE_PrevR_1 = 0.094,
MDRI = 200, RSE_MDRI =.05,
FRR = .01, RSE_FRR = .2,
MDRI_1 = 200, RSE_MDRI_1 =.05,
FRR_1 = .01, RSE_FRR_1 = .2,
PrevH_2 = .21, RSE_PrevH_2 = .03,
PrevR_2 = .13, RSE_PrevR_2 = .095,
MDRI_2 = 180, RSE_MDRI_2 = .07,
FRR_2 = .009, RSE_FRR_2 = .2,
# PrevH_3 = .18, RSE_PrevH_3 = 0.022,
# PrevR_3 = 0.12, RSE_PrevR_3 = 0.05,
# MDRI_3 = 180, RSE_MDRI_3 = .06,
# FRR_3 = .02, RSE_FRR_3 = .1,
BigT = 730){
#if(survey_number == 2){
# checks if case is correctly specified
if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#manual dispatching according to case, passing arguments to the appropriate function
if (1 == case) { #Case I: Assumes that the two surveys use a single MDRI and FRRs estimate.
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI,MDRI),
RSE_MDRI = c(RSE_MDRI,RSE_MDRI),
FRR = c(FRR,FRR),
RSE_FRR = c(RSE_FRR,RSE_FRR),
BigT = BigT,
BMest = 'same.test')
incdiff<-temp$Incidence.Difference.Statistics
}
if (2 == case) { #Case II: Assumes that the two surveys use a single MDRI estimate, but that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI,MDRI),
RSE_MDRI = c(RSE_MDRI,RSE_MDRI),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
temp<-incprops(PrevH = c(PrevH_1,PrevH_2),
RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2),
PrevR = c(PrevR_1,PrevR_2),
RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2),
BS_Count = 10000, Boot = FALSE,
MDRI = c(MDRI_1,MDRI_2),
RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2),
FRR = c(FRR_1,FRR_2),
RSE_FRR = c(RSE_FRR_1,RSE_FRR_2),
BigT = BigT,
BMest = 'MDRI.FRR.indep')
incdiff <- temp$Incidence.Difference.Statistics
}
#}
# if(survey_number == 3){
#
#   # checks if case is correctly specified
#   if(!sum(case == c(1, 2, 3))) {stop("Please enter a valid case value")}
#
#   #manual dispatching according to case, passing arguments to the appropriate function
#
#
#   if(3 == case) { #Case III: Assumes that the two surveys use MDRI estimates which arise from different incidence tests, and that the FRRs are independently estimated
#     temp<-incprops(PrevH = c(PrevH_1,PrevH_2,PrevH_3),
#                    RSE_PrevH = c(RSE_PrevH_1, RSE_PrevH_2, RSE_PrevH_3),
#                    PrevR = c(PrevR_1,PrevR_2,PrevR_3),
#                    RSE_PrevR = c(RSE_PrevR_1, RSE_PrevR_2, RSE_PrevR_3),
#                    BS_Count = 10000, Boot = FALSE,
#                    MDRI = c(MDRI_1,MDRI_2,MDRI_3),
#                    RSE_MDRI = c(RSE_MDRI_1,RSE_MDRI_2,RSE_MDRI_3),
#                    FRR = c(FRR_1,FRR_2,FRR_3),
#                    RSE_FRR = c(RSE_FRR_1,RSE_FRR_2,RSE_FRR_3),
#                    BigT = BigT,
#                    BMest = 'MDRI.FRR.indep')
#     incdiff <- temp$Incidence.Difference.Statistics
#
#   }
# }
return(incdiff)
}
incdiff_calc()
incdiff_calc(case = 1)
incdiff_calc(case = 2)
incdiff_calc(case = 3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
prev_inc_calc_incprop <- function(PrevH = 0.20, RSE_PrevH = 0.028,
PrevR = 0.10, RSE_PrevR = 0.09,
MDRI = 210, RSE_MDRI = 0.05,
FRR = 0.005, RSE_FRR = 0.19,
BigT = 700){
temp<-incprops(PrevH = PrevH, RSE_PrevH = RSE_PrevH,
PrevR = PrevR, RSE_PrevR = RSE_PrevR,
BS_Count = 10000, Boot = TRUE, MDRI = MDRI,
RSE_MDRI = RSE_MDRI, FRR = FRR,
RSE_FRR = RSE_FRR, BigT = BigT)
df.values<-cbind(temp$Incidence.Statistics,temp$Annual.Risk.of.Infection)
return(df.values)
}
prev_inc_calc_incprop()
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
?data.frame
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
rm(list = ls())
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
runApp('~/Desktop/inctools/shiny-inctools/Incidence_prevalence_calculator')
